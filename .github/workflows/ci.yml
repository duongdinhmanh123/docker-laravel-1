name: CI

on:
  # Build the nightly version at at 8:20 AM UTC
  schedule:
    - cron: "20 8 * * *"

  # For all pushes to the main branch run the tests and push the image to the
  # GitHub Container Registry under an edge tag
  push:
    branches:
      - master

  # For all PRs to the main branch run the tests
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: oanhnn/laravel
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setting up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Build test
        id: docker_test
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          pull: true
          load: true
          tags: ${{ env.DOCKER_IMAGE }}:test
          target: test

      - name: Setup cache dependencies
        id: composer-cache-dir-path
        run: echo "::set-output name=dir::$(composer -g config cache-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ github.sha }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Create Laravel project
        run: |
          composer create-project --ignore-platform-reqs --prefer-dist laravel/laravel ./ci-test
          sed -i "s|^DB_USERNAME=.*|DB_USERNAME=dev|g"        ./ci-test/.env
          sed -i "s|^DB_PASSWORD=.*|DB_PASSWORD=devpass|g"    ./ci-test/.env
          sed -i "s|^DB_DATABASE=.*|DB_DATABASE=laravel|g"    ./ci-test/.env
          sed -i "s|^REDIS_PASSWORD=.*|REDIS_PASSWORD=null|g" ./ci-test/.env

      - name: Setup docker-compose
        run: cp ./example/* ./ci-test/

      - name: Run with docker
        run: |
          docker-compose up -d
          sudo chmod -R g+w         bootstrap/cache storage
          sudo chown -R `whoami`:82 bootstrap/cache storage
          sleep 10s
          docker-compose exec -T php artisan migrate --seed
          curl --silent --show-error --fail http://127.0.0.1/
          docker-compose down
        working-directory: ./ci-test

  push:
    name: Build and push to GHCR.IO
    runs-on: ubuntu-latest
    needs: [ 'test' ]
    if: github.event_name != 'pull_request'
    env:
      DOCKER_IMAGE: ghcr.io/oanhnn/laravel
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          VERSION=test
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          # if [ "${{ github.event_name }}" = "push" ]; then
          #   TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          # fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Setting up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          target: release
          pull: true
          push: true
          tags: ${{ steps.prepare.outputs.tags }}
