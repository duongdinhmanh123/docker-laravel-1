name: main

on:
  push:
    # Publish branch `master` as Docker `latest` image.
    # Publish branch `develop` as Docker `develop` image.
    branches:
      - master
      - develop

    # Publish tag `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          fi

  # Push image to GitHub Package Registry.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v1
      - name: Log into GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: |
          DOCKER_REPO=docker.pkg.github.com/${{ github.repository }}
          DOCKER_TAG=${{ github.sha }}
          IMAGE_NAME=${DOCKER_REPO}:${DOCKER_TAG}

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          docker pull $DOCKER_REPO:latest || true
          docker build \
              --cache-from $DOCKER_REPO:latest \
              --compress \
              --build-arg VERSION=$VERSION \
              --build-arg COMMIT=$(git rev-parse HEAD) \
              --build-arg URL=$(git config --get remote.origin.url) \
              --build-arg BRANCH=$(git rev-parse --abbrev-ref HEAD) \
              --build-arg DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
              --pull \
              --tag $IMAGE_NAME .

      - name: Push image
        run: |
          docker push $IMAGE_NAME
